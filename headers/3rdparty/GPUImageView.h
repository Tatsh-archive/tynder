//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

#import "GPUImageInput.h"

@class GLProgram, GPUImageFramebuffer, NSString;

@interface GPUImageView : UIView <GPUImageInput>
{
    int inputRotation;
    GPUImageFramebuffer *inputFramebufferForDisplay;
    unsigned int displayRenderbuffer;
    unsigned int displayFramebuffer;
    GLProgram *displayProgram;
    int displayPositionAttribute;
    int displayTextureCoordinateAttribute;
    int displayInputTextureUniform;
    struct CGSize inputImageSize;
    float imageVertices[8];
    float backgroundColorRed;
    float backgroundColorGreen;
    float backgroundColorBlue;
    float backgroundColorAlpha;
    struct CGSize boundsSizeAtFrameBufferEpoch;
    BOOL enabled;
    unsigned int aspectRatio;
    int _fillMode;
    struct CGSize _sizeInPixels;
}

+ (Class)layerClass;
+ (const float *)textureCoordinatesForRotation:(int)arg1;
- (void).cxx_destruct;
@property(nonatomic) unsigned int aspectRatio; // @synthesize aspectRatio;
- (void)commonInit;
- (void)createDisplayFramebuffer;
- (void)dealloc;
- (void)destroyDisplayFramebuffer;
@property(nonatomic) BOOL enabled; // @synthesize enabled;
- (void)endProcessing;
@property(nonatomic) int fillMode; // @synthesize fillMode=_fillMode;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (struct CGSize)maximumOutputSize;
- (void)newFrameReadyAtTime:(CDStruct_1b6d18a9)arg1 atIndex:(int)arg2;
- (int)nextAvailableTextureIndex;
- (void)presentFramebuffer;
- (void)recalculateViewGeometry;
- (void)setBackgroundColorRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (void)setCurrentlyReceivingMonochromeInput:(BOOL)arg1;
- (void)setDisplayFramebuffer;
- (void)setInputFramebuffer:(id)arg1 atIndex:(int)arg2;
- (void)setInputRotation:(int)arg1 atIndex:(int)arg2;
- (void)setInputSize:(struct CGSize)arg1 atIndex:(int)arg2;
- (BOOL)shouldIgnoreUpdatesToThisTarget;
@property(readonly, nonatomic) struct CGSize sizeInPixels; // @synthesize sizeInPixels=_sizeInPixels;
- (BOOL)wantsMonochromeInput;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

