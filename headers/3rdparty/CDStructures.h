//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct BCSegment {
    union BCPoint _field1;
    union BCPoint _field2;
};

struct CATransform3D {
    float m11;
    float m12;
    float m13;
    float m14;
    float m21;
    float m22;
    float m23;
    float m24;
    float m31;
    float m32;
    float m33;
    float m34;
    float m41;
    float m42;
    float m43;
    float m44;
};

struct CCContactSet {
    int _field1;
    struct CGPoint _field2;
    CDStruct_7a8303c3 _field3[2];
};

struct CCGraphicsBuffer {
    unsigned int count;
    unsigned int capacity;
    unsigned int elementSize;
    void *ptr;
    int data;
    int type;
};

struct CCPVRMipmap {
    char *address;
    unsigned int len;
};

struct CCRenderBuffer {
    struct CCVertex *_field1;
    unsigned short *_field2;
    unsigned short _field3;
};

struct CCSpriteTexCoordSet {
    union _GLKVector2 _field1;
    union _GLKVector2 _field2;
    union _GLKVector2 _field3;
    union _GLKVector2 _field4;
};

struct CCSpriteVertexes {
    struct CCVertex bl;
    struct CCVertex br;
    struct CCVertex tr;
    struct CCVertex tl;
};

struct CCVertex {
    union _GLKVector4 position;
    union _GLKVector2 texCoord1;
    union _GLKVector2 texCoord2;
    union _GLKVector4 color;
};

struct CGAffineTransform {
    float a;
    float b;
    float c;
    float d;
    float tx;
    float ty;
};

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct FBLikeControlLayout {
    struct CGSize _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct GPUByteColorVector {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct GPUMatrix3x3 {
    struct GPUVector3 one;
    struct GPUVector3 two;
    struct GPUVector3 three;
};

struct GPUMatrix4x4 {
    struct GPUVector4 one;
    struct GPUVector4 two;
    struct GPUVector4 three;
    struct GPUVector4 four;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct GPUVector3 {
    float one;
    float two;
    float three;
};

struct GPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct IntRect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct POPAnimatorItem;

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct UIEdgeInsets {
    float top;
    float left;
    float bottom;
    float right;
};

struct UT_hash_handle {
    struct UT_hash_table *_field1;
    void *_field2;
    void *_field3;
    struct UT_hash_handle *_field4;
    struct UT_hash_handle *_field5;
    void *_field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct UT_hash_table;

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _BMFontDef {
    unsigned short _field1;
    struct CGRect _field2;
    short _field3;
    short _field4;
    short _field5;
};

struct _BMFontPadding {
    int left;
    int top;
    int right;
    int bottom;
};

struct _CCPositionType {
    unsigned char xUnit;
    unsigned char yUnit;
    unsigned char corner;
};

struct _CCSizeType {
    unsigned char widthUnit;
    unsigned char heightUnit;
};

struct _Crashlytics__CustomAttribute;

struct _Crashlytics__InternalData;

struct _Crashlytics__Session {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _ProtobufCBinaryData _field3;
    unsigned long long _field4;
    int _field5;
    unsigned long long _field6;
    int _field7;
    int _field8;
    int _field9;
    unsigned int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    struct _Crashlytics__InternalData *_field15;
    struct _Crashlytics__Session__User *_field16;
    struct _Crashlytics__Session__Application *_field17;
    struct _Crashlytics__Session__OperatingSystem *_field18;
    struct _Crashlytics__Session__Device *_field19;
    unsigned int _field20;
    struct _Crashlytics__Session__Event **_field21;
};

struct _Crashlytics__Session__Application {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    int _field9;
    int _field10;
    struct _Crashlytics__Session__Application__Process *_field11;
    struct _Crashlytics__Session__Application__Organization *_field12;
};

struct _Crashlytics__Session__Application__Organization;

struct _Crashlytics__Session__Application__Process;

struct _Crashlytics__Session__Device {
    struct _ProtobufCMessage _field1;
    int _field2;
    struct _ProtobufCBinaryData _field3;
    int _field4;
    struct _ProtobufCBinaryData _field5;
    int _field6;
    char *_field7;
    int _field8;
    unsigned int _field9;
    int _field10;
    unsigned long long _field11;
    int _field12;
    unsigned long long _field13;
    char *_field14;
    char *_field15;
    int _field16;
    int _field17;
    unsigned int _field18;
    struct _Crashlytics__Session__Device__Identifier **_field19;
    int _field20;
    unsigned int _field21;
    char *_field22;
    char *_field23;
};

struct _Crashlytics__Session__Device__Identifier;

struct _Crashlytics__Session__Event {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    char *_field3;
    char *_field4;
    struct _Crashlytics__Session__Event__Application *_field5;
    struct _Crashlytics__Session__Event__OperatingSystem *_field6;
    struct _Crashlytics__Session__Event__Device *_field7;
    struct _Crashlytics__Session__Event__Log *_field8;
};

struct _Crashlytics__Session__Event__Application;

struct _Crashlytics__Session__Event__Device;

struct _Crashlytics__Session__Event__Log;

struct _Crashlytics__Session__Event__OperatingSystem;

struct _Crashlytics__Session__OperatingSystem {
    struct _ProtobufCMessage _field1;
    int _field2;
    char *_field3;
    char *_field4;
    int _field5;
    int _field6;
};

struct _Crashlytics__Session__User {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    unsigned int _field5;
    struct _Crashlytics__CustomAttribute **_field6;
};

struct _FontDefHashElement {
    unsigned int _field1;
    struct _BMFontDef _field2;
    struct UT_hash_handle _field3;
};

struct _KerningHashElement {
    int _field1;
    int _field2;
    struct UT_hash_handle _field3;
};

struct _LineVertex {
    struct CGPoint _field1;
    float _field2;
    struct _ccColor4F _field3;
};

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned int _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    id _field11;
    id _field12;
    float _field13;
    int _field14;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _ProtobufCBinaryData {
    unsigned int _field1;
    char *_field2;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>;

struct _ccBezierConfig {
    struct CGPoint endPosition;
    struct CGPoint controlPoint_1;
    struct CGPoint controlPoint_2;
};

struct _ccBlendFunc {
    unsigned int _field1;
    unsigned int _field2;
};

struct _ccColor3B {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
};

struct _ccColor4B {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct _ccColor4F {
    float r;
    float g;
    float b;
    float a;
};

struct _ccTexParams {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct _hashElement {
    id _field1;
    unsigned int _field2;
    char _field3;
    char _field4;
    struct UT_hash_handle _field5;
    id _field6;
    id _field7;
};

struct _sCCParticle {
    union _GLKVector2 _field1;
    union _GLKVector2 _field2;
    union _GLKVector4 _field3;
    union _GLKVector4 _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    unsigned int _field10;
    union {
        struct {
            union _GLKVector2 _field1;
            float _field2;
            float _field3;
        } _field1;
        struct {
            float _field1;
            float _field2;
            float _field3;
            float _field4;
        } _field2;
    } _field11;
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlKind {
    void *_field1;
    int _field2;
};

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct _xmlStd {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlStd *_field7;
    struct _xmlStd *_field8;
    struct _xmlDoc *_field9;
};

struct cpArbiter {
    float _field1;
    float _field2;
    struct CGPoint _field3;
    id _field4;
    struct cpShape *_field5;
    struct cpShape *_field6;
    struct cpBody *_field7;
    struct cpBody *_field8;
    struct cpArbiterThread _field9;
    struct cpArbiterThread _field10;
    int _field11;
    struct cpContact *_field12;
    struct CGPoint _field13;
    struct cpCollisionHandler *_field14;
    struct cpCollisionHandler *_field15;
    struct cpCollisionHandler *_field16;
    unsigned char _field17;
    unsigned int _field18;
    int _field19;
};

struct cpArbiterThread {
    struct cpArbiter *_field1;
    struct cpArbiter *_field2;
};

struct cpArray;

struct cpBB {
    float l;
    float b;
    float r;
    float t;
};

struct cpBody {
    CDUnknownFunctionPointerType velocity_func;
    CDUnknownFunctionPointerType position_func;
    float m;
    float m_inv;
    float i;
    float i_inv;
    struct CGPoint cog;
    struct CGPoint p;
    struct CGPoint v;
    struct CGPoint f;
    float a;
    float w;
    float t;
    struct CGAffineTransform transform;
    id userData;
    struct CGPoint v_bias;
    float w_bias;
    struct cpSpace *space;
    struct cpShape *shapeList;
    struct cpArbiter *arbiterList;
    struct cpConstraint *constraintList;
    struct {
        struct cpBody *root;
        struct cpBody *next;
        float idleTime;
    } sleeping;
};

struct cpCircleShape {
    struct cpShape shape;
    struct CGPoint c;
    struct CGPoint tc;
    float r;
};

struct cpCollisionHandler {
    id _field1;
    id _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    id _field7;
};

struct cpConstraint {
    struct cpConstraintClass *klass;
    struct cpSpace *space;
    struct cpBody *a;
    struct cpBody *b;
    struct cpConstraint *next_a;
    struct cpConstraint *next_b;
    float maxForce;
    float errorBias;
    float maxBias;
    unsigned char collideBodies;
    CDUnknownFunctionPointerType preSolve;
    CDUnknownFunctionPointerType postSolve;
    id userData;
};

struct cpConstraintClass;

struct cpContact;

struct cpContactBufferHeader;

struct cpContactPointSet {
    int count;
    struct CGPoint normal;
    CDStruct_7a8303c3 points[2];
};

struct cpDampedRotarySpring {
    struct cpConstraint constraint;
    float restAngle;
    float stiffness;
    float damping;
    CDUnknownFunctionPointerType springTorqueFunc;
    float target_wrn;
    float w_coef;
    float iSum;
    float jAcc;
};

struct cpDampedSpring {
    struct cpConstraint constraint;
    struct CGPoint anchorA;
    struct CGPoint anchorB;
    float restLength;
    float stiffness;
    float damping;
    CDUnknownFunctionPointerType springForceFunc;
    float target_vrn;
    float v_coef;
    struct CGPoint r1;
    struct CGPoint r2;
    float nMass;
    struct CGPoint n;
    float jAcc;
};

struct cpGearJoint {
    struct cpConstraint constraint;
    float phase;
    float ratio;
    float ratio_inv;
    float iSum;
    float bias;
    float jAcc;
};

struct cpGrooveJoint {
    struct cpConstraint constraint;
    struct CGPoint grv_n;
    struct CGPoint grv_a;
    struct CGPoint grv_b;
    struct CGPoint anchorB;
    struct CGPoint grv_tn;
    float clamp;
    struct CGPoint r1;
    struct CGPoint r2;
    struct cpMat2x2 k;
    struct CGPoint jAcc;
    struct CGPoint bias;
};

struct cpHashSet;

struct cpMat2x2 {
    float a;
    float b;
    float c;
    float d;
};

struct cpPinJoint {
    struct cpConstraint constraint;
    struct CGPoint anchorA;
    struct CGPoint anchorB;
    float dist;
    struct CGPoint r1;
    struct CGPoint r2;
    struct CGPoint n;
    float nMass;
    float jnAcc;
    float bias;
};

struct cpPivotJoint {
    struct cpConstraint constraint;
    struct CGPoint anchorA;
    struct CGPoint anchorB;
    struct CGPoint r1;
    struct CGPoint r2;
    struct cpMat2x2 k;
    struct CGPoint jAcc;
    struct CGPoint bias;
};

struct cpPointQueryInfo {
    struct cpShape *shape;
    struct CGPoint point;
    float distance;
    struct CGPoint gradient;
};

struct cpPolyShape {
    struct cpShape shape;
    float r;
    int count;
    struct cpSplittingPlane *planes;
    struct cpSplittingPlane _planes[12];
};

struct cpRatchetJoint {
    struct cpConstraint constraint;
    float angle;
    float phase;
    float ratchet;
    float iSum;
    float bias;
    float jAcc;
};

struct cpRotaryLimitJoint {
    struct cpConstraint constraint;
    float min;
    float max;
    float iSum;
    float bias;
    float jAcc;
};

struct cpSegmentQueryInfo {
    struct cpShape *shape;
    struct CGPoint point;
    struct CGPoint normal;
    float alpha;
};

struct cpSegmentShape {
    struct cpShape shape;
    struct CGPoint a;
    struct CGPoint b;
    struct CGPoint n;
    struct CGPoint ta;
    struct CGPoint tb;
    struct CGPoint tn;
    float r;
    struct CGPoint a_tangent;
    struct CGPoint b_tangent;
};

struct cpShape {
    struct cpShapeClass *klass;
    struct cpSpace *space;
    struct cpBody *body;
    struct cpShapeMassInfo massInfo;
    struct cpBB bb;
    unsigned char sensor;
    float e;
    float u;
    struct CGPoint surfaceV;
    id userData;
    id type;
    struct cpShapeFilter filter;
    struct cpShape *next;
    struct cpShape *prev;
    unsigned int hashid;
};

struct cpShapeClass;

struct cpShapeFilter {
    id group;
    unsigned int categories;
    unsigned int mask;
};

struct cpShapeMassInfo {
    float m;
    float i;
    struct CGPoint cog;
    float area;
};

struct cpSimpleMotor {
    struct cpConstraint constraint;
    float rate;
    float iSum;
    float jAcc;
};

struct cpSlideJoint {
    struct cpConstraint constraint;
    struct CGPoint anchorA;
    struct CGPoint anchorB;
    float min;
    float max;
    struct CGPoint r1;
    struct CGPoint r2;
    struct CGPoint n;
    float nMass;
    float jnAcc;
    float bias;
};

struct cpSpace {
    int _field1;
    struct CGPoint _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    unsigned int _field8;
    id _field9;
    unsigned int _field10;
    float _field11;
    struct cpArray *_field12;
    struct cpArray *_field13;
    struct cpArray *_field14;
    struct cpArray *_field15;
    unsigned int _field16;
    struct cpSpatialIndex *_field17;
    struct cpSpatialIndex *_field18;
    struct cpArray *_field19;
    struct cpArray *_field20;
    struct cpContactBufferHeader *_field21;
    struct cpHashSet *_field22;
    struct cpArray *_field23;
    struct cpArray *_field24;
    unsigned int _field25;
    unsigned char _field26;
    struct cpHashSet *_field27;
    struct cpCollisionHandler _field28;
    unsigned char _field29;
    struct cpArray *_field30;
    struct cpBody *_field31;
    struct cpBody _field32;
};

struct cpSpatialIndex;

struct cpSplittingPlane {
    struct CGPoint v0;
    struct CGPoint n;
};

struct histogram {
    unsigned int *_field1;
    unsigned int *_field2;
    unsigned int *_field3;
    unsigned int *_field4;
};

struct in_addr {
    unsigned int _field1;
};

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long __first_;
    } __size_alloc_;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct timeval {
    int tv_sec;
    int tv_usec;
};

#pragma mark Typedef'd Structures

typedef struct {
    SEL _field1;
    SEL _field2;
    SEL _field3;
} CDStruct_0348af7d;

typedef struct {
    char _field1;
    unsigned char _field2;
    char _field3;
    unsigned long long _field4;
} CDStruct_c6e275e6;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    float x;
    float y;
    float z;
} CDStruct_03942939;

typedef struct {
    int _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_60d14f2d;

typedef struct {
    int _field1;
    int _field2;
    char *_field3;
    _Bool _field4;
    char *_field5;
    _Bool _field6;
} CDStruct_9c005df8;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct CDStruct_183601bc;

typedef struct {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    CDStruct_183601bc *_field3;
} CDStruct_a6175b54;

typedef struct {
    CDStruct_03942939 _field1;
    CDStruct_03942939 _field2;
} CDStruct_8d2a3b1c;

typedef struct {
    struct CGPoint pointA;
    struct CGPoint pointB;
    float distance;
} CDStruct_7a8303c3;

// Template types
typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long __first_;
    } __size_alloc_;
} list_2b9a5494;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

#pragma mark Named Unions

union BCPoint {
    CDStruct_2c43369c _field1;
    double _field2[2];
};

union BCTrapezoid {
    struct {
        union BCPoint _field1;
        union BCPoint _field2;
        union BCPoint _field3;
        union BCPoint _field4;
    } _field1;
    union BCPoint _field2[4];
};

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector2 {
    struct {
        float x;
        float y;
    } ;
    struct {
        float s;
        float t;
    } ;
    float v[2];
};

union _GLKVector3 {
    CDStruct_03942939 _field1;
    CDStruct_03942939 _field2;
    CDStruct_03942939 _field3;
    float _field4[3];
};

union _GLKVector4 {
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    struct {
        float r;
        float g;
        float b;
        float a;
    } ;
    struct {
        float s;
        float t;
        float p;
        float q;
    } ;
    float v[4];
};

