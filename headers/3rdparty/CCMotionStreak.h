//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CCNode.h"

#import "CCBlendProtocol.h"
#import "CCShaderProtocol.h"
#import "CCTextureProtocol.h"

@class CCBlendMode, CCRenderState, CCShader, CCTexture, NSMutableDictionary, NSString;

@interface CCMotionStreak : CCNode <CCTextureProtocol, CCShaderProtocol, CCBlendProtocol>
{
    struct CGPoint _positionR;
    float _stroke;
    float _fadeDelta;
    float _minSeg;
    unsigned int _maxPoints;
    unsigned int _nuPoints;
    unsigned int _previousNuPoints;
    struct CGPoint *_pointVertexes;
    float *_pointState;
    struct _ccVertex2F {
        float _field1;
        float _field2;
    } *_vertices;
    struct _ccTex2F {
        float _field1;
        float _field2;
    } *_texCoords;
    char *_colorPointer;
    BOOL _fastMode;
    BOOL _startingPositionInitialized;
}

+ (id)streakWithFade:(float)arg1 minSeg:(float)arg2 width:(float)arg3 color:(id)arg4 texture:(id)arg5;
+ (id)streakWithFade:(float)arg1 minSeg:(float)arg2 width:(float)arg3 color:(id)arg4 textureFilename:(id)arg5;
- (void)dealloc;
- (void)draw:(id)arg1 transform:(const union _GLKMatrix4 *)arg2;
- (id)initWithFade:(float)arg1 minSeg:(float)arg2 width:(float)arg3 color:(id)arg4 texture:(id)arg5;
- (id)initWithFade:(float)arg1 minSeg:(float)arg2 width:(float)arg3 color:(id)arg4 textureFilename:(id)arg5;
@property(nonatomic, getter=isFastMode) BOOL fastMode; // @synthesize fastMode=_fastMode;
- (float)opacity;
- (void)reset;
- (void)setColor:(id)arg1;
- (void)setOpacity:(float)arg1;
- (void)setPosition:(struct CGPoint)arg1;
- (void)update:(double)arg1;

// Remaining properties
@property(retain, nonatomic) CCBlendMode *blendMode;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly, nonatomic) CCRenderState *renderState;
@property(retain, nonatomic) CCShader *shader;
@property(readonly, nonatomic) NSMutableDictionary *shaderUniforms;
@property(readonly) Class superclass;
@property(retain, nonatomic) CCTexture *texture;

@end

