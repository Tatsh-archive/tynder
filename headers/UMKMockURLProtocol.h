//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSURLProtocol.h"

@interface UMKMockURLProtocol : NSURLProtocol
{
    id <UMKMockURLRequest> _mockRequest;
    id <UMKMockURLResponder> _mockResponder;
}

+ (void)addUnexpectedRequest:(id)arg1;
+ (BOOL)canInitWithRequest:(id)arg1;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (id)canonicalURLForURL:(id)arg1;
+ (void)disable;
+ (void)enable;
+ (id)expectMockHTTPGetRequestWithURL:(id)arg1 responseError:(id)arg2;
+ (id)expectMockHTTPGetRequestWithURL:(id)arg1 responseStatusCode:(int)arg2 responseJSON:(id)arg3;
+ (id)expectMockHTTPPatchRequestWithURL:(id)arg1 requestJSON:(id)arg2 responseError:(id)arg3;
+ (id)expectMockHTTPPatchRequestWithURL:(id)arg1 requestJSON:(id)arg2 responseStatusCode:(int)arg3 responseJSON:(id)arg4;
+ (id)expectMockHTTPPostRequestWithURL:(id)arg1 requestJSON:(id)arg2 responseError:(id)arg3;
+ (id)expectMockHTTPPostRequestWithURL:(id)arg1 requestJSON:(id)arg2 responseStatusCode:(int)arg3 responseJSON:(id)arg4;
+ (id)expectMockHTTPPutRequestWithURL:(id)arg1 requestJSON:(id)arg2 responseError:(id)arg3;
+ (id)expectMockHTTPPutRequestWithURL:(id)arg1 requestJSON:(id)arg2 responseStatusCode:(int)arg3 responseJSON:(id)arg4;
+ (id)expectMockHTTPRequestWithMethod:(id)arg1 URL:(id)arg2 requestJSON:(id)arg3 responseError:(id)arg4;
+ (id)expectMockHTTPRequestWithMethod:(id)arg1 URL:(id)arg2 requestJSON:(id)arg3 responseStatusCode:(int)arg4 responseJSON:(id)arg5;
+ (void)expectMockRequest:(id)arg1;
+ (id)expectedMockRequestMatchingURLRequest:(id)arg1;
+ (id)expectedMockRequests;
+ (BOOL)isVerificationEnabled;
+ (void)markRequest:(id)arg1 asServicedByMockRequest:(id)arg2;
+ (void)removeExpectedMockRequest:(id)arg1;
+ (BOOL)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
+ (void)reset;
+ (id)servicedRequests;
+ (void)setVerificationEnabled:(BOOL)arg1;
+ (id)settings;
+ (id)unexpectedRequests;
+ (BOOL)verifyWithError:(id *)arg1;
- (void).cxx_destruct;
- (id)initWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3;
@property(retain, nonatomic) id <UMKMockURLRequest> mockRequest; // @synthesize mockRequest=_mockRequest;
@property(retain, nonatomic) id <UMKMockURLResponder> mockResponder; // @synthesize mockResponder=_mockResponder;
- (void)startLoading;
- (void)stopLoading;

@end

