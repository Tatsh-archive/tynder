//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CCSprite.h"

#import "CCLabelProtocol.h"

@class CCColor, NSAttributedString, NSString;

@interface CCLabelTTF : CCSprite <CCLabelProtocol>
{
    BOOL _isTextureDirty;
    unsigned char _horizontalAlignment;
    BOOL _adjustsFontSizeToFit;
    struct _CCSizeType _dimensionsType;
    struct _CCPositionType _shadowOffsetType;
    NSAttributedString *_attributedString;
    NSString *_fontName;
    float _fontSize;
    CCColor *_fontColor;
    unsigned int _verticalAlignment;
    float _minimumFontSize;
    float _baselineAdjustment;
    CCColor *_shadowColor;
    float _shadowBlurRadius;
    CCColor *_outlineColor;
    float _outlineWidth;
    struct CGSize _dimensions;
    struct CGPoint _shadowOffset;
}

+ (id)labelWithAttributedString:(id)arg1;
+ (id)labelWithAttributedString:(id)arg1 dimensions:(struct CGSize)arg2;
+ (id)labelWithString:(id)arg1 fontName:(id)arg2 fontSize:(float)arg3;
+ (id)labelWithString:(id)arg1 fontName:(id)arg2 fontSize:(float)arg3 dimensions:(struct CGSize)arg4;
+ (void)registerCustomTTF:(id)arg1;
- (void).cxx_destruct;
- (void)_setAttributedString:(id)arg1;
@property(nonatomic) BOOL adjustsFontSizeToFit; // @synthesize adjustsFontSizeToFit=_adjustsFontSizeToFit;
@property(copy, nonatomic) NSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
@property(nonatomic) float baselineAdjustment; // @synthesize baselineAdjustment=_baselineAdjustment;
- (struct CGSize)contentSize;
- (id)createTextureWithAttributedString:(id)arg1 useFullColor:(BOOL)arg2;
- (id)createTextureWithString:(id)arg1 useFullColor:(BOOL)arg2;
@property(readonly, copy) NSString *description;
@property(nonatomic) struct CGSize dimensions; // @synthesize dimensions=_dimensions;
@property(nonatomic) struct _CCSizeType dimensionsType; // @synthesize dimensionsType=_dimensionsType;
@property(retain, nonatomic) CCColor *fontColor; // @synthesize fontColor=_fontColor;
@property(retain, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
@property(nonatomic) float fontSize; // @synthesize fontSize=_fontSize;
@property(nonatomic) unsigned char horizontalAlignment; // @synthesize horizontalAlignment=_horizontalAlignment;
- (id)init;
- (id)initWithAttributedString:(id)arg1;
- (id)initWithAttributedString:(id)arg1 dimensions:(struct CGSize)arg2;
- (id)initWithAttributedString:(id)arg1 fontName:(id)arg2 fontSize:(float)arg3 dimensions:(struct CGSize)arg4;
- (id)initWithString:(id)arg1 fontName:(id)arg2 fontSize:(float)arg3;
- (id)initWithString:(id)arg1 fontName:(id)arg2 fontSize:(float)arg3 dimensions:(struct CGSize)arg4;
@property(nonatomic) float minimumFontSize; // @synthesize minimumFontSize=_minimumFontSize;
- (void)onEnter;
@property(retain, nonatomic) CCColor *outlineColor; // @synthesize outlineColor=_outlineColor;
@property(nonatomic) float outlineWidth; // @synthesize outlineWidth=_outlineWidth;
- (id)renderState;
@property(nonatomic) float shadowBlurRadius; // @synthesize shadowBlurRadius=_shadowBlurRadius;
@property(retain, nonatomic) CCColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(nonatomic) struct CGPoint shadowOffset; // @synthesize shadowOffset=_shadowOffset;
@property(nonatomic) struct _CCPositionType shadowOffsetType; // @synthesize shadowOffsetType=_shadowOffsetType;
@property(copy, nonatomic) NSString *string;
- (void)setTextureDirty;
@property(nonatomic) unsigned int verticalAlignment; // @synthesize verticalAlignment=_verticalAlignment;
@property(readonly, nonatomic) struct CGPoint shadowOffsetInPoints;
- (BOOL)updateTexture;
- (BOOL)updateTextureOld;
- (void)visit:(id)arg1 parentTransform:(const union _GLKMatrix4 *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

